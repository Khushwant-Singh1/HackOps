version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: hackops_postgres
    environment:
      POSTGRES_DB: hackops_dev
      POSTGRES_USER: hackops
      POSTGRES_PASSWORD: hackops123
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./scripts/init-db.sql:/docker-entrypoint-initdb.d/init-db.sql
    networks:
      - hackops_network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U hackops -d hackops_dev"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Redis Cache & Queue
  redis:
    image: redis:7-alpine
    container_name: hackops_redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - hackops_network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Backend API
  backend:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: hackops_backend
    environment:
      - DATABASE_URL=postgresql://hackops:hackops123@postgres:5432/hackops_dev
      - REDIS_URL=redis://redis:6379/0
      - CELERY_BROKER_URL=redis://redis:6379/1
      - CELERY_RESULT_BACKEND=redis://redis:6379/2
      - SECRET_KEY=dev-secret-key-change-in-production
      - DEBUG=true
    ports:
      - "8000:8000"
    volumes:
      - .:/app
      - /app/__pycache__
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    networks:
      - hackops_network
    command: uvicorn main:app --host 0.0.0.0 --port 8000 --reload

  # Celery Worker
  celery_worker:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: hackops_celery_worker
    environment:
      - DATABASE_URL=postgresql://hackops:hackops123@postgres:5432/hackops_dev
      - REDIS_URL=redis://redis:6379/0
      - CELERY_BROKER_URL=redis://redis:6379/1
      - CELERY_RESULT_BACKEND=redis://redis:6379/2
      - SECRET_KEY=dev-secret-key-change-in-production
    volumes:
      - .:/app
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    networks:
      - hackops_network
    command: celery -A app.core.celery_app worker --loglevel=info

  # Celery Beat (Scheduler)
  celery_beat:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: hackops_celery_beat
    environment:
      - DATABASE_URL=postgresql://hackops:hackops123@postgres:5432/hackops_dev
      - REDIS_URL=redis://redis:6379/0
      - CELERY_BROKER_URL=redis://redis:6379/1
      - CELERY_RESULT_BACKEND=redis://redis:6379/2
      - SECRET_KEY=dev-secret-key-change-in-production
    volumes:
      - .:/app
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    networks:
      - hackops_network
    command: celery -A app.core.celery_app beat --loglevel=info

volumes:
  postgres_data:
  redis_data:

networks:
  hackops_network:
    driver: bridge
